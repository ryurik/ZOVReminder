<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelLeft.ContentImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>